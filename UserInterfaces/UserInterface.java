package UserInterfaces;

import MemoryGame.Card;

import java.awt.Point;

/**
 * To interface λειτουργεί ως μία βιβλιοθήκη που επιτρέπει τις παρακάτω μεθόδους να υλοποιηθούν σε άλλες κλάσεις με
 * διαφορετική λειτουργεί. Αυτό έχει ως σκοπό στο δεύτερο κομμάτι τις εργασίας να μην γίνει καμία αλλαγή στις υπόλοιπες
 * κλάσεις αλλά να δημιουργηθεί μία καινούργια κλάση που θα υλοποιεί το γραφικό περιβάλλον. Με αυτό τον τρόπο θα υπάρχουν
 * και οι δύο εκδόσεις του παιχνιδιού.
 *
 * @author Δημήτριος Παντελεήμων Γιακάτος
 */
public interface UserInterface {

    /**
     * Η μέθοδος τρέχει τις διαδικασίες προετοιμασίας του UI.
     */
    void Initialize();

    /**
     * Η μέθοδος ζητάει από το χρήστη να επιλέξει ένα από τα 3 επίπεδα δυσκολίας.
     *
     * @return Ακέραιο αριθμό που αντικατοπτρίζει το επίπεδο δυσκολίας.
     */
    int AskForDifficulty();

    /**
     * Η μέθοδος εκτυπώνει στην οθόνη το ταμπλό του παιχνιδιού.
     *
     * @param cards Αντικείμενο της κλάσης Card, που περιλαμβάνει όλες τις κάρτες που έχει το ταμπλό. Επίσης περιέχει
     *             πληροφορίες για τον αριθμό κάθε κάρτας και αν είναι ανοιχτή ή κλειστή.
     */
    void RenderTable(Card[][] cards);

    /**
     * Η μέθοδος ζητάει από το χρήστη να επιλέξει τις συντεταγμένες της κάρτας που θέλει να ανοίξει.
     *
     * @return Αντικείμενο της κλάσης Point που περιλαμβάνει τις συντεταγμένες που έχει επιλέξει ο χρήστης.
     */
    Point AskToSelectACard();

    /**
     * Η μέθοδος εμφανίζει στην οθόνη τα σφάλματα που προκύπτουν, ώστε να επιτευχθεί η ομαλή λειτουργία του προγράμματος.
     *
     * @param error Συμβολοσειρά, που περιλαμβάνει το μήνυμα που θα εκτυπωθεί στην οθόνη.
     */
    void ShowError(String error);

    /**
     * Η μέθοδος εμφανίζει στην οθόνη τα μηνύματα που προκύπτουν, ώστε να ενημερώνει τον χρήστη.
     *
     * @param message Συμβολοσειρά, που περιλαμβάνει το μήνυμα που θα εκτυπωθεί στην οθόνη.
     */
    void ShowMessage(String message);
}
